@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix map: <http://mapping.local/>.
@prefix sty: <http://purl.bioontology.org/ontology/STY/>.
@prefix sio: <http://semanticscience.org/resource/SIO_>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix ncit: <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#>.
@prefix roo: <http://www.cancerdata.org/roo/>.
@prefix icd: <http://purl.bioontology.org/ontology/ICD10/>.
@prefix skos: <http://www.w3.org/2008/05/skos#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix uo: <http://purl.obolibrary.org/obo/>.
@prefix lsf: <https://github.com/ERCJanssen/Functionomics/Functionomics17022021.owl#>.   #check if last version
@prefix SCTID: <http://snomed.info/sct/>.
@prefix ICF: <https://www.who.int/icf#>.

###########################################
# Add patient
###########################################
<#patient> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "patient/{study_id}";
        rr:class lsf:Patient;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            rr:column "study_id"; 
            rr:datatype xsd:string;
        ];
 ].

###########################################
# Add identifier
###########################################
<#patient>
    rr:predicateObjectMap [
        rr:predicate lsf:has_study_identifier;
        rr:objectMap [
            rr:parentTriplesMap <#Identifier>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
    ];
 ].

<#Identifier> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "Identifier/{study_id}";
        rr:class lsf:Identifier;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "study_id";
		rr:datatype xsd:integer; 
         ];
    ].

###########################################
# Add procedure 
###########################################
<#patient>
rr:predicateObjectMap [
        rr:predicate lsf:has_surgical_procedure;
        rr:objectMap [
            rr:parentTriplesMap <#Procedure>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

<#Procedure> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "procedure/{study_id}";
        rr:termType rr:BlankNode;
        rr:class lsf:Procedure;
 ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_discharge_day;
        rr:objectMap [
            rr:parentTriplesMap <#DischargeDay>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ];
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#LumbarSpinalFusion>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
].

###########################################
# Add Complications
###########################################
<#Procedure>
    rr:predicateObjectMap [
        rr:predicate lsf:causes_complication;
        rr:objectMap [
            rr:parentTriplesMap <#Complications>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ]. 

<#Complications> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "Complications/{study_id}";
        rr:class lsf:perioperative_complication;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "postop_compl";
		rr:datatype xsd:integer; 
         ];
    ].
###########################################
# Add Discharge Day
###########################################

<#DischargeDay> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "DischargeDay/{study_id}";
        rr:class lsf:Discharged_from_hospital;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "los";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "los"; 
		rr:datatype lsf:day;
         ];
    ].

###########################################
# Add spinal fusion
###########################################

<#LumbarSpinalFusion> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "LumbarSpinalFusion/{study_id}";
        rr:termType rr:BlankNode;
        rr:class lsf:Lumbar_spinal_fusion;
 ];
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#NLevels>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
     ];
].

###########################################
# Add NLevels
###########################################
<#NLevels> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "NLevels/{study_id}";
        rr:class lsf:Number_of_levels_fused;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "n_levels_fused";
		rr:datatype xsd:integer; 
         ];
    ].

###########################################
# Add PersonalFactors
###########################################
<#patient>
    rr:predicateObjectMap [
        rr:predicate lsf:has_personal_factors;
        rr:objectMap [
            rr:parentTriplesMap <#PersonalFactors>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

 <#PersonalFactors> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "PersonalFactors/{study_id}";
	rr:termType rr:BlankNode;
        rr:class lsf:f._PERSONAL_FACTORS;
].

###########################################
# Add smoking status
###########################################
<#PersonalFactors>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#SmokingStatus>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

<#SmokingStatus> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "SmokingStatus/{study_id}";
        rr:class lsf:Smoker;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "smoking";
		rr:datatype xsd:integer; 
         ];
    ].

###########################################
# Add age
###########################################
<#PersonalFactors>
rr:predicateObjectMap [
        rr:predicate lsf:has_age;
        rr:objectMap [
            rr:parentTriplesMap <#age>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

<#age> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "age/{study_id}";
        rr:class lsf:Age;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "age";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "age"; 
		rr:datatype lsf:year;
         ];
    ].


###########################################
# Add asa
###########################################
<#PersonalFactors>
    rr:predicateObjectMap [
        rr:predicate lsf:has_asa_class;
        rr:objectMap [
            rr:parentTriplesMap <#asa>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

<#asa> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "asa/{study_id}";
        rr:class lsf:Finding_of_American_Society_of_Anesthesiologists_physical_status_classification;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "asa";
		rr:datatype xsd:integer; 
         ];
    ].

###########################################
# Add Gender
###########################################
<#PersonalFactors>
rr:predicateObjectMap [
      rr:predicate lsf:has_gender;
      rr:objectMap [
          rr:parentTriplesMap <#Gender>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

<#Gender> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "Gender/{study_id}";
        rr:class lsf:Gender_finding;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "sex";
		rr:datatype xsd:integer; 
         ];
    ].

###########################################
# Add body functions
###########################################
<#patient>
    rr:predicateObjectMap [
        rr:predicate lsf:has_body_function;
        rr:objectMap [
            rr:parentTriplesMap <#bodyFunctions>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

<#bodyFunctions> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf"];
    rr:subjectMap [
        rr:template "bodyFunctions/{study_id}";
	rr:termType rr:BlankNode;
        rr:class lsf:b;
 ].

###########################################
# Add bmi
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#bmi>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

<#bmi> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "bmi/{study_id}";
        rr:class lsf:BMI;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "bmi";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "bmi"; 
		rr:datatype lsf:kilogram_per_cubic_meter;
         ];
    ].

###########################################
# Add Sorensen
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#Sorensen>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

<#Sorensen> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "sorensen/{study_id}";
        rr:class lsf:Sorensen;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "sorensen";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "sorensen"; 
		rr:datatype lsf:second;
         ];
    ].

###########################################
# Add movement control
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#MovementControl>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

<#MovementControl> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "MovementControl/{study_id}";
        rr:class lsf:Movement_control;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "motor_control";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "motor_control"; 
		rr:datatype lsf:count_unit;
         ];
    ].

###########################################
# Add finger floor distance
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#FingerFloorDistance>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

<#FingerFloorDistance> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "FingerFloorDistance/{study_id}";
        rr:class lsf:Finger-floor_distance;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "finger_floor_disctance";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "finger_floor_disctance"; 
		rr:datatype lsf:centimeter;
         ];
    ].

###########################################
# Add steep ramp test
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#SteepRampTest>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

<#SteepRampTest> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "SteepRampTest/{study_id}";
        rr:class lsf:Steep_ramp_test;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "steep_wrpeak_kg";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "steep_wrpeak_kg"; 
		rr:datatype lsf:watt_per_kilogram;
         ];
    ].

###########################################
# Add pcs
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#pcs>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
].

<#pcs> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "pcs/{study_id}";
        rr:class lsf:PCS;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "pcs";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "pcs"; 
		rr:datatype lsf:52_scale;
         ];
    ].

###########################################
# Add HADS angst
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#HADSAnxiety>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
].

<#HADSAnxiety> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "HADSAnxiety/{study_id}";
        rr:class lsf:HADS_anxiety_score;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "hads_angst";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "hads_angst"; 
		rr:datatype lsf:100_scale;
         ];
    ].
###########################################
# Add HADS depressie
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#HADSDepression>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

<#HADSDepression> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "HADSDepression/{study_id}";
        rr:class lsf:HADS_depression_score;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "hads_depressie";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "hads_depressie"; 
		rr:datatype lsf:100_scale;
         ];
    ].

###########################################
# Add vas preop
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#VASpreop>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

<#VASpreop> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "VASpreop/{study_id}";
        rr:class lsf:VAS;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "max_pain";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "max_pain"; 
		rr:datatype lsf:100_scale;
         ];
    ].
###########################################
# Add vas postop
###########################################
<#bodyFunctions>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#VASpostop>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

<#VASpreop> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "VASpostop/{study_id}";
        rr:class lsf:VAS;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "t1_max_pain";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "t1_max_pain"; 
		rr:datatype lsf:100_scale;
         ];
    ].

###########################################
# Add activities and participation
###########################################
<#patient>
    rr:predicateObjectMap [
        rr:predicate lsf:has_propterties_of_activities_and_participation;
        rr:objectMap [
            rr:parentTriplesMap <#ActivitiesAndParticipation>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

 <#ActivitiesAndParticipation> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "ActivitiesAndParticipation/{study_id}";
	rr:termType rr:BlankNode;
        rr:class lsf:d;
].

###########################################
# Add odi
###########################################
<#ActivitiesAndParticipation>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#odi>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

<#odi> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "odi/{study_id}";
        rr:class lsf:ODI;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "odi";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "odi"; 
		rr:datatype lsf:100_scale;
         ];
    ].

###########################################
# Add SF-36 MCS
###########################################
<#ActivitiesAndParticipation>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#SF36MCS>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

<#SF36MCS> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "SF36MCS/{study_id}";
        rr:class lsf:SF36MCS;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "mcs1";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "mcs1"; 
		rr:datatype lsf:100_scale;
         ];
    ].
###########################################
# Add SF-36 pcs
###########################################
<#ActivitiesAndParticipation>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#SF36pcs>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].
<#SF36pcs> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "SF36pcs/{study_id}";
        rr:class lsf:SF36PCS;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "pcs1";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "pcs1"; 
		rr:datatype lsf:100_scale;
         ];
    ].

###########################################
# Add PostProceduralRecoveryStatus
###########################################
<#Procedure>
rr:predicateObjectMap [
        rr:predicate lsf:has_postprocedural_recovery_status;
        rr:objectMap [
            rr:parentTriplesMap <#PostProceduralRecoveryStatus>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
].

<#ActivitiesAndParticipation>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#PostProceduralRecoveryStatus>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
 ].

 <#PostProceduralRecoveryStatus> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "PostProceduralRecoveryStatus/{study_id}";
	rr:termType rr:BlankNode;
        rr:class lsf:Post_Procedural_Recovery_Status;
].

###########################################
# Add mILAS
###########################################
<#PostProceduralRecoveryStatus>
    rr:predicateObjectMap [
        rr:predicate rdfs:subclass;
        rr:objectMap [
            rr:parentTriplesMap <#mILAS>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
    ];
].

<#mILAS> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "MILAS/{study_id}";
        rr:class lsf:mILAS;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "milas_0";
		rr:datatype xsd:integer; 
         ];
    ];
    rr:predicateObjectMap [
        rr:predicate lsf:has_unit;
        rr:objectMap [
            	rr:column "milas_0"; 
		rr:datatype lsf:day;
         ];
    ].

###########################################
# Add disorder of the back
###########################################
<#patient>
    rr:predicateObjectMap [
        rr:predicate lsf:is_diagnosed_with;
        rr:objectMap [
            rr:parentTriplesMap <#DisorderOfTheBack>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
    ];
 ].

<#DisorderOfTheBack> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "DisorderOfTheBack/{study_id}";
        rr:class lsf:Disorder_of_back;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "diagnosis_cat";
		rr:datatype xsd:integer; 
         ];
 ];
    rr:predicateObjectMap [
        rr:predicate lsf:Determins;
        rr:objectMap [
            rr:parentTriplesMap <#Procedure>;
		rr:joinCondition [
			rr:child "study_id";
			rr:parent "study_id";	
		];
        ];
    ].

###########################################
# Add surgery date
###########################################
<#Surgery_date> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "Surgery_date/{study_id}";
        rr:class lsf:Surgery_date;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "surgery_date";
		rr:datatype xsd:dateTime; 
         ];
 ].

 ###########################################
# Add discharge date
###########################################

<#Discharge_date> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "Discharge_date/{study_id}";
        rr:class lsf:discharge_date;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "discharge_date";
		rr:datatype xsd:dateTime; 
         ];
 ].
###########################################
# Add one year follow up date
###########################################

<#One_year_follow_up_date> a rr:TriplesMap;
    rr:logicalTable [ rr:tableName "lsf" ];
    rr:subjectMap [
        rr:template "One_year_follow_up/{study_id}";
        rr:class lsf:One_year_post_surgery;
    ];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            	rr:column "one_year_follow_up";
		rr:datatype xsd:dateTime; 
         ];
 ].